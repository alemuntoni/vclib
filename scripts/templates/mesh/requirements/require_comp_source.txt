// %EL_UC% %CNUC%

/**
 * @brief This function asserts that a Mesh has a %EL_UC%Container,
 * the %EL_UC% has a %CNUC% Component, and that the %CNUC% Component is
 * enabled and available at runtime.
 *
 * If the Mesh:
 * - has not a Container of the given ElementEnumType;
 * - has the Container but the Element has not a Component of the given
 *   ComponentEnumType;
 * a build error will be generated.
 * 
 * If the Mesh:
 * - has the %EL_UC% Container, the %EL_UC% has the %CNUC% Component,
 * but the Component is not enabled, a vcl::MissingComponentException will be
 * thrown.
 *
 * @tparam MeshType: the type of the Mesh to check, it must satisfy the
 * %EL_UC%MeshConcept.
 *
 * @throws vcl::MissingComponentException if the %CNUC% Component is not
 * enabled in the %EL_UC%Container of the Mesh.
 *
 * @param[in] m: the mesh on which check the availability of the %CNUC%
 * Component in the %EL_UC%.
 *
 * @ingroup %EL%_requirements
 */
template<%EL_UC%MeshConcept MeshType>
void requirePer%EL_UC%%CNUC%(const MeshType& m)
	requires HasPer%EL_UC%%CNUC%<MeshType>
{
	requirePerElementComponent<%EL_U%, %CNU%>(m);
}

