/*****************************************************************************
 * VCLib                                                                     *
 * Visual Computing Library                                                  *
 *                                                                           *
 * Copyright(C) 2021-2022                                                    *
 * Alessandro Muntoni                                                        *
 * VCLab - ISTI - Italian National Research Council                          *
 *                                                                           *
 * All rights reserved.                                                      *
 *                                                                           *
 * This program is free software; you can redistribute it and/or modify      *
 * it under the terms of the GNU General Public License as published by      *
 * the Free Software Foundation; either version 3 of the License, or         *
 * (at your option) any later version.                                       *
 *                                                                           *
 * This program is distributed in the hope that it will be useful,           *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the              *
 * GNU General Public License (http://www.gnu.org/licenses/gpl.txt)          *
 * for more details.                                                         *
 ****************************************************************************/

#ifndef VCL_MESH_UTILS_TRI_POLY_INDEX_BIMAP_H
#define VCL_MESH_UTILS_TRI_POLY_INDEX_BIMAP_H

#include <vclib/misc/types.h>

namespace vcl::mesh {

/**
 * @brief The TriPolyIndexBiMap class allows to store a bidirectional mapping between a Polygon Mesh
 * and a Triangle Mesh generated by the polygon mesh.
 *
 * The class stores, for each triangle index, the index of the polygon that generated the triangle,
 * and for each polygon, the first triangle index generated by that polygon.
 * Therefore, keep in mind that the mapping assumes that, for each polygon that generates N
 * triangles, the N triangles are contiguous in the Triangle Mesh.
 *
 * Queries have O(1) complexity.
 * Insertion may have O(1) or O(n), depending on the size of the containers used to store indices
 * (same way of std::vector push_back() memeber function). You can also reserve before, in order
 * to be sure that the insertion will be O(1).
 */
class TriPolyIndexBiMap
{
public:
	TriPolyIndexBiMap();

	uint polygon(uint triangleIndex) const;
	uint triangle(uint polygonIndex) const;
	uint triangleNumber(uint polygonIndex) const;

	void clear();
	void reserve(uint nTriangles, uint nPolygons);
	void insert(uint triangleIndex, uint polygonIndex);

private:
	std::vector<uint> triToPoly;
	std::vector<uint> polyToTri;
};

} // namespace vcl::mesh

#include "tri_poly_index_bimap.cpp"

#endif // VCL_MESH_UTILS_TRI_POLY_INDEX_BIMAP_H
